<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cl.purchase.mapper.purchase.ContractMapper" >
  <resultMap id="BaseResultMap" type="com.cl.purchase.model.purchase.Contract" >
    <id column="no" property="no" jdbcType="VARCHAR" />
    <result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
    <result column="contract_type" property="contractType" jdbcType="INTEGER" />
    <result column="validate_date_begin" property="validateDateBegin" jdbcType="TIMESTAMP" />
    <result column="validate_date_end" property="validateDateEnd" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_person" property="createPerson" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_person" property="updatePerson" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    no, supplier_id, contract_type, validate_date_begin, validate_date_end, status, create_person, 
    create_date, update_person, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from p_contract
    where no = #{no,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from p_contract
    where no = #{no,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.cl.purchase.model.purchase.Contract" >
    insert into p_contract (no, supplier_id, contract_type, 
      validate_date_begin, validate_date_end, 
      status, create_person, create_date, 
      update_person, update_date)
    values (#{no,jdbcType=VARCHAR}, #{supplierId,jdbcType=INTEGER}, #{contractType,jdbcType=INTEGER}, 
      #{validateDateBegin,jdbcType=TIMESTAMP}, #{validateDateEnd,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{createPerson,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updatePerson,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cl.purchase.model.purchase.Contract" >
    insert into p_contract
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="no != null" >
        no,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="contractType != null" >
        contract_type,
      </if>
      <if test="validateDateBegin != null" >
        validate_date_begin,
      </if>
      <if test="validateDateEnd != null" >
        validate_date_end,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createPerson != null" >
        create_person,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updatePerson != null" >
        update_person,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="no != null" >
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="contractType != null" >
        #{contractType,jdbcType=INTEGER},
      </if>
      <if test="validateDateBegin != null" >
        #{validateDateBegin,jdbcType=TIMESTAMP},
      </if>
      <if test="validateDateEnd != null" >
        #{validateDateEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createPerson != null" >
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cl.purchase.model.purchase.Contract" >
    update p_contract
    <set >
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="contractType != null" >
        contract_type = #{contractType,jdbcType=INTEGER},
      </if>
      <if test="validateDateBegin != null" >
        validate_date_begin = #{validateDateBegin,jdbcType=TIMESTAMP},
      </if>
      <if test="validateDateEnd != null" >
        validate_date_end = #{validateDateEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createPerson != null" >
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        update_person = #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where no = #{no,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cl.purchase.model.purchase.Contract" >
    update p_contract
    set supplier_id = #{supplierId,jdbcType=INTEGER},
      contract_type = #{contractType,jdbcType=INTEGER},
      validate_date_begin = #{validateDateBegin,jdbcType=TIMESTAMP},
      validate_date_end = #{validateDateEnd,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_person = #{updatePerson,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where no = #{no,jdbcType=VARCHAR}
  </update>
  
<!-- 以上是为了节约开发时间，使用MyBatisGenerator生成的代码-->
<!-- 以下是针对不足功能，添加的代码  -->
  
    <sql id="where">
    	<trim prefix="where" prefixOverrides="AND">
	    	<if test="no!=null and no!=''">
	    		and b.no like CONCAT(#{no},'%') 
	    	</if>
    	</trim>
    </sql>
    <sql id="orderby">
    	order by b.update_date desc 
    </sql>
    <select id="getContractTotalBySearch" parameterType="com.cl.purchase.model.purchase.ContractSearchModel" resultType="java.lang.Integer">
    	select count(0) 
    	from p_contract b
    	<include refid="where"/>
    </select>
    <!-- 这个方法虽然没有显示的书写limit，但是也是分页的，利用的MyBatis的RowBounds -->
    <select id="getContractListBySearch" parameterType="com.cl.purchase.model.purchase.ContractSearchModel" resultMap="BaseResultMap">
	    select 
	    <include refid="Base_Column_List" />
	    from p_contract b
        <include refid="where"/>
        <include refid="orderby"/>
    </select>
    <select id="getContractList" resultType="java.lang.Integer">
	    select 
	    <include refid="Base_Column_List" />
	    from p_contract b
    </select>  
</mapper>