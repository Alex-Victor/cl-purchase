<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cl.purchase.mapper.purchase.DeliverDetailMapper" >
  <resultMap id="BaseResultMap" type="com.cl.purchase.model.purchase.DeliverDetail" >
    <id column="product_no" property="productNo" jdbcType="VARCHAR" />
    <result column="deliver_no" property="deliverNo" jdbcType="VARCHAR" />
    <result column="deliver_quality" property="deliverQuality" jdbcType="SMALLINT" />
    <result column="storage_quality" property="storageQuality" jdbcType="SMALLINT" />
    <result column="storage_normal_quality" property="storageNormalQuality" jdbcType="SMALLINT" />
    <result column="storage_broken_quality" property="storageBrokenQuality" jdbcType="SMALLINT" />
    <result column="purchase_price" property="purchasePrice" jdbcType="DECIMAL" />
    <result column="create_person" property="createPerson" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_person" property="updatePerson" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    product_no, deliver_no, deliver_quality, storage_quality, storage_normal_quality, 
    storage_broken_quality, purchase_price, create_person, create_date, update_person, 
    update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from p_deliver_detail
    where product_no = #{productNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from p_deliver_detail
    where product_no = #{productNo,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.cl.purchase.model.purchase.DeliverDetail" >
    insert into p_deliver_detail (product_no, deliver_no, deliver_quality, 
      storage_quality, storage_normal_quality, 
      storage_broken_quality, purchase_price, create_person, 
      create_date, update_person, update_date
      )
    values (#{productNo,jdbcType=VARCHAR}, #{deliverNo,jdbcType=VARCHAR}, #{deliverQuality,jdbcType=SMALLINT}, 
      #{storageQuality,jdbcType=SMALLINT}, #{storageNormalQuality,jdbcType=SMALLINT}, 
      #{storageBrokenQuality,jdbcType=SMALLINT}, #{purchasePrice,jdbcType=DECIMAL}, #{createPerson,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updatePerson,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cl.purchase.model.purchase.DeliverDetail" >
    insert into p_deliver_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="productNo != null" >
        product_no,
      </if>
      <if test="deliverNo != null" >
        deliver_no,
      </if>
      <if test="deliverQuality != null" >
        deliver_quality,
      </if>
      <if test="storageQuality != null" >
        storage_quality,
      </if>
      <if test="storageNormalQuality != null" >
        storage_normal_quality,
      </if>
      <if test="storageBrokenQuality != null" >
        storage_broken_quality,
      </if>
      <if test="purchasePrice != null" >
        purchase_price,
      </if>
      <if test="createPerson != null" >
        create_person,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updatePerson != null" >
        update_person,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="productNo != null" >
        #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="deliverNo != null" >
        #{deliverNo,jdbcType=VARCHAR},
      </if>
      <if test="deliverQuality != null" >
        #{deliverQuality,jdbcType=SMALLINT},
      </if>
      <if test="storageQuality != null" >
        #{storageQuality,jdbcType=SMALLINT},
      </if>
      <if test="storageNormalQuality != null" >
        #{storageNormalQuality,jdbcType=SMALLINT},
      </if>
      <if test="storageBrokenQuality != null" >
        #{storageBrokenQuality,jdbcType=SMALLINT},
      </if>
      <if test="purchasePrice != null" >
        #{purchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="createPerson != null" >
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cl.purchase.model.purchase.DeliverDetail" >
    update p_deliver_detail
    <set >
      <if test="deliverNo != null" >
        deliver_no = #{deliverNo,jdbcType=VARCHAR},
      </if>
      <if test="deliverQuality != null" >
        deliver_quality = #{deliverQuality,jdbcType=SMALLINT},
      </if>
      <if test="storageQuality != null" >
        storage_quality = #{storageQuality,jdbcType=SMALLINT},
      </if>
      <if test="storageNormalQuality != null" >
        storage_normal_quality = #{storageNormalQuality,jdbcType=SMALLINT},
      </if>
      <if test="storageBrokenQuality != null" >
        storage_broken_quality = #{storageBrokenQuality,jdbcType=SMALLINT},
      </if>
      <if test="purchasePrice != null" >
        purchase_price = #{purchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="createPerson != null" >
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        update_person = #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where product_no = #{productNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cl.purchase.model.purchase.DeliverDetail" >
    update p_deliver_detail
    set deliver_no = #{deliverNo,jdbcType=VARCHAR},
      deliver_quality = #{deliverQuality,jdbcType=SMALLINT},
      storage_quality = #{storageQuality,jdbcType=SMALLINT},
      storage_normal_quality = #{storageNormalQuality,jdbcType=SMALLINT},
      storage_broken_quality = #{storageBrokenQuality,jdbcType=SMALLINT},
      purchase_price = #{purchasePrice,jdbcType=DECIMAL},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_person = #{updatePerson,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where product_no = #{productNo,jdbcType=VARCHAR}
  </update>
</mapper>